trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  majorVersion: '1'
  minorVersion: '0'
  patchVersion: $(Build.BuildNumber)
  packageVersion: '$(majorVersion).$(minorVersion).$(patchVersion)'

steps:
- script: |
    echo "=== VERSION INFORMATION ==="
    echo "Major Version: $(majorVersion)"
    echo "Minor Version: $(minorVersion)"
    echo "Patch Version: $(patchVersion)"
    echo "Full Package Version: $(packageVersion)"
    echo "Build Number: $(Build.BuildNumber)"
    echo "Build ID: $(Build.BuildId)"
    echo "=========================="
  displayName: 'Print version information to console'

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Pack project'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'packageVersion'

- task: DotNetCoreCLI@2
  displayName: 'Publish to Azure Artifacts'
  inputs:
    command: 'push'
    publishVstsFeed: 'hello_world/pancake-feed'
    publishPackageMetadata: true
